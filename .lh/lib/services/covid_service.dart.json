{
    "sourceFile": "lib/services/covid_service.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 24,
            "patches": [
                {
                    "date": 1633882508051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1633883171820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n \n import '../models/global_summary.dart';\n import '../models/country_summary.dart';\n import '../models/country.dart';\n-import 'package:flutter/foundation.dart';\n \n class CovidService {\n   Future<GlobalSummaryModel> getGlobalSummary() async {\n     final data = await http.Client().get(\"https://api.covid19api.com/summary\");\n@@ -31,13 +30,11 @@\n     return summaryList;\n   }\n \n   Future<List<CountryModel>> getCountryList() async {\n-    final data =\n-        await http.Client().get(\"https://api.covid19api.com/countries\");\n-    final a = await http.Client()\n+    final data = await http.Client()\n         .get(\"https://www.datos.gov.co/resource/vcjz-niiq.json\");\n-    debugPrint('datas: $a');\n+\n     if (data.statusCode != 200) throw Exception();\n \n     List<CountryModel> countries = (json.decode(data.body) as List)\n         .map((item) => new CountryModel.fromJson(item))\n"
                },
                {
                    "date": 1633968418422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,11 @@\n     return summary;\n   }\n \n   Future<List<CountrySummaryModel>> getCountrySummary(String slug) async {\n-    final data = await http.Client()\n-        .get(\"https://api.covid19api.com/total/dayone/country/\" + slug);\n+    final data = await http.Client().get(\n+        \"https://www.datos.gov.co/resource/gt2j-8ykr.json?departamento=\" +\n+            slug);\n \n     if (data.statusCode != 200) throw Exception();\n \n     List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n@@ -31,9 +32,9 @@\n   }\n \n   Future<List<CountryModel>> getCountryList() async {\n     final data = await http.Client()\n-        .get(\"https://www.datos.gov.co/resource/vcjz-niiq.json\");\n+        .get(\"https://www.datos.gov.co/resource/xdk5-pm3f.json\");\n \n     if (data.statusCode != 200) throw Exception();\n \n     List<CountryModel> countries = (json.decode(data.body) as List)\n"
                },
                {
                    "date": 1633968631556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,15 +21,17 @@\n     final data = await http.Client().get(\n         \"https://www.datos.gov.co/resource/gt2j-8ykr.json?departamento=\" +\n             slug);\n \n-    if (data.statusCode != 200) throw Exception();\n+    if (data.statusCode == 200) {\n+      List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n+          .map((item) => new CountrySummaryModel.fromJson(item))\n+          .toList();\n \n-    List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n-        .map((item) => new CountrySummaryModel.fromJson(item))\n-        .toList();\n-\n-    return summaryList;\n+      return summaryList;\n+    } else {\n+      return [];\n+    }\n   }\n \n   Future<List<CountryModel>> getCountryList() async {\n     final data = await http.Client()\n"
                },
                {
                    "date": 1633971469356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import 'package:http/http.dart' as http;\n+import \"package:collection/collection.dart\";3\n import 'dart:convert';\n \n import '../models/global_summary.dart';\n import '../models/country_summary.dart';\n@@ -18,12 +19,14 @@\n   }\n \n   Future<List<CountrySummaryModel>> getCountrySummary(String slug) async {\n     final data = await http.Client().get(\n-        \"https://www.datos.gov.co/resource/gt2j-8ykr.json?departamento=\" +\n+        \"https://www.datos.gov.co/resource/gt2j-8ykr.json?ciudad_municipio=\" +\n             slug);\n \n     if (data.statusCode == 200) {\n+      var newMap = groupBy((data.body as List), (obj) => obj['release_date']);\n+      print(newMap)\n       List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n           .toList();\n \n"
                },
                {
                    "date": 1633971482343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import 'package:http/http.dart' as http;\n-import \"package:collection/collection.dart\";3\n+import \"package:collection/collection.dart\";\n import 'dart:convert';\n \n import '../models/global_summary.dart';\n import '../models/country_summary.dart';\n@@ -24,9 +24,9 @@\n             slug);\n \n     if (data.statusCode == 200) {\n       var newMap = groupBy((data.body as List), (obj) => obj['release_date']);\n-      print(newMap)\n+      print(newMap);\n       List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n           .toList();\n \n"
                },
                {
                    "date": 1633971609867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,10 @@\n         \"https://www.datos.gov.co/resource/gt2j-8ykr.json?ciudad_municipio=\" +\n             slug);\n \n     if (data.statusCode == 200) {\n-      var newMap = groupBy((data.body as List), (obj) => obj['release_date']);\n-      print(newMap);\n+      //var newMap = groupBy((data.body as List), (obj) => obj['release_date']);\n+      print(data.body);\n       List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n           .toList();\n \n"
                },
                {
                    "date": 1633971869653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,11 @@\n         \"https://www.datos.gov.co/resource/gt2j-8ykr.json?ciudad_municipio=\" +\n             slug);\n \n     if (data.statusCode == 200) {\n-      //var newMap = groupBy((data.body as List), (obj) => obj['release_date']);\n-      print(data.body);\n+      var newMap = groupBy((json.decode(data.body) as List),\n+          (obj) => obj['fecha_de_notificaci_n']);\n+      print(newMap);\n       List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n           .toList();\n \n"
                },
                {
                    "date": 1633972180104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,10 @@\n \n     if (data.statusCode == 200) {\n       var newMap = groupBy((json.decode(data.body) as List),\n           (obj) => obj['fecha_de_notificaci_n']);\n-      print(newMap);\n+      print(newMap.runtimeType);\n+\n       List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n           .toList();\n \n"
                },
                {
                    "date": 1633972288661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     if (data.statusCode == 200) {\n       var newMap = groupBy((json.decode(data.body) as List),\n           (obj) => obj['fecha_de_notificaci_n']);\n       print(newMap.runtimeType);\n-\n+      (newMap as List).map((e) => print(e));\n       List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n           .toList();\n \n"
                },
                {
                    "date": 1633972498521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,10 @@\n \n     if (data.statusCode == 200) {\n       var newMap = groupBy((json.decode(data.body) as List),\n           (obj) => obj['fecha_de_notificaci_n']);\n-      print(newMap.runtimeType);\n-      (newMap as List).map((e) => print(e));\n+      print(newMap.length);\n+      //(newMap as List).map((e) => print(e));\n       List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n           .toList();\n \n"
                },
                {
                    "date": 1633972533115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,13 +27,14 @@\n       var newMap = groupBy((json.decode(data.body) as List),\n           (obj) => obj['fecha_de_notificaci_n']);\n       print(newMap.length);\n       //(newMap as List).map((e) => print(e));\n-      List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n+      /*List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n           .toList();\n \n-      return summaryList;\n+      return summaryList;+*/\n+      return [];\n     } else {\n       return [];\n     }\n   }\n"
                },
                {
                    "date": 1633972611081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,16 +25,15 @@\n \n     if (data.statusCode == 200) {\n       var newMap = groupBy((json.decode(data.body) as List),\n           (obj) => obj['fecha_de_notificaci_n']);\n-      print(newMap.length);\n+      print(newMap[0]);\n       //(newMap as List).map((e) => print(e));\n-      /*List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n+      List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n           .toList();\n \n-      return summaryList;+*/\n-      return [];\n+      return summaryList;\n     } else {\n       return [];\n     }\n   }\n"
                },
                {
                    "date": 1633973026804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n     if (data.statusCode == 200) {\n       var newMap = groupBy((json.decode(data.body) as List),\n           (obj) => obj['fecha_de_notificaci_n']);\n       print(newMap[0]);\n+      newMap.entries.map((MapEntry mapEntry) => print(mapEntry.value));\n       //(newMap as List).map((e) => print(e));\n       List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n           .toList();\n"
                },
                {
                    "date": 1633973384978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     if (data.statusCode == 200) {\n       var newMap = groupBy((json.decode(data.body) as List),\n           (obj) => obj['fecha_de_notificaci_n']);\n       print(newMap[0]);\n-      newMap.entries.map((MapEntry mapEntry) => print(mapEntry.value));\n+      newMap.entries.map((MapEntry mapEntry) => print(mapEntry));\n       //(newMap as List).map((e) => print(e));\n       List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n           .toList();\n"
                },
                {
                    "date": 1633979814946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,11 @@\n \n     if (data.statusCode == 200) {\n       var newMap = groupBy((json.decode(data.body) as List),\n           (obj) => obj['fecha_de_notificaci_n']);\n-      print(newMap[0]);\n+      var xde = newMap.entries;\n+      print(newMap.length);\n+\n       newMap.entries.map((MapEntry mapEntry) => print(mapEntry));\n       //(newMap as List).map((e) => print(e));\n       List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n"
                },
                {
                    "date": 1633980255612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n \n     if (data.statusCode == 200) {\n       var newMap = groupBy((json.decode(data.body) as List),\n           (obj) => obj['fecha_de_notificaci_n']);\n-      var xde = newMap.entries;\n+      var xde = json.decode(data.body) as List;\n       print(newMap.length);\n \n       newMap.entries.map((MapEntry mapEntry) => print(mapEntry));\n       //(newMap as List).map((e) => print(e));\n"
                },
                {
                    "date": 1633994319388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n   }\n \n   Future<List<CountrySummaryModel>> getCountrySummary(String slug) async {\n     final data = await http.Client().get(\n-        \"https://www.datos.gov.co/resource/gt2j-8ykr.json?ciudad_municipio=\" +\n+        r\"https://www.datos.gov.co/resource/gt2j-8ykr.json?$order=fecha_de_notificaci_n DESC&$limit=1844674407370955161&ciudad_municipio=\" +\n             slug);\n \n     if (data.statusCode == 200) {\n       var newMap = groupBy((json.decode(data.body) as List),\n"
                },
                {
                    "date": 1633994393896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n   }\n \n   Future<List<CountrySummaryModel>> getCountrySummary(String slug) async {\n     final data = await http.Client().get(\n-        r\"https://www.datos.gov.co/resource/gt2j-8ykr.json?$order=fecha_de_notificaci_n DESC&$limit=1844674407370955161&ciudad_municipio=\" +\n+        \"https://www.datos.gov.co/resource/gt2j-8ykr.json?\\$order=fecha_de_notificaci_n DESC&\\$limit=1844674407370955161&ciudad_municipio=\" +\n             slug);\n \n     if (data.statusCode == 200) {\n       var newMap = groupBy((json.decode(data.body) as List),\n"
                },
                {
                    "date": 1635176411728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,55 @@\n+import 'package:http/http.dart' as http;\n+import \"package:collection/collection.dart\";\n+import 'dart:convert';\n+\n+import '../models/global_summary.dart';\n+import '../models/country_summary.dart';\n+import '../models/country.dart';\n+\n+class CovidService {\n+  Future<GlobalSummaryModel> getGlobalSummary() async {\n+    final data = await http.Client().get(\"https://api.covid19api.com/summary\");\n+\n+    if (data.statusCode != 200) throw Exception();\n+\n+    GlobalSummaryModel summary =\n+        new GlobalSummaryModel.fromJson(json.decode(data.body));\n+\n+    return summary;\n+  }\n+\n+  Future<List<CountrySummaryModel>> getCountrySummary(String slug) async {\n+    final data = await http.Client().get(\n+        r\"https://www.datos.gov.co/resource/gt2j-8ykr.json?$select=ciudad_municipio,recuperado,COUNT(*)%20as%20casos&$group=ciudad_municipio,recuperado&ciudad_municipio=5001\");\n+\n+    if (data.statusCode == 200) {\n+      var newMap = groupBy((json.decode(data.body) as List),\n+          (obj) => obj['fecha_de_notificaci_n']);\n+      var xde = json.decode(data.body) as List;\n+      print(newMap.length);\n+\n+      newMap.entries.map((MapEntry mapEntry) => print(mapEntry));\n+      //(newMap as List).map((e) => print(e));\n+      List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n+          .map((item) => new CountrySummaryModel.fromJson(item))\n+          .toList();\n+\n+      return summaryList;\n+    } else {\n+      return [];\n+    }\n+  }\n+\n+  Future<List<CountryModel>> getCountryList() async {\n+    final data = await http.Client()\n+        .get(\"https://www.datos.gov.co/resource/xdk5-pm3f.json\");\n+\n+    if (data.statusCode != 200) throw Exception();\n+\n+    List<CountryModel> countries = (json.decode(data.body) as List)\n+        .map((item) => new CountryModel.fromJson(item))\n+        .toList();\n+\n+    return countries;\n+  }\n+}\n"
                },
                {
                    "date": 1635176458631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,60 +52,4 @@\n \n     return countries;\n   }\n }\n-import 'package:http/http.dart' as http;\n-import \"package:collection/collection.dart\";\n-import 'dart:convert';\n-\n-import '../models/global_summary.dart';\n-import '../models/country_summary.dart';\n-import '../models/country.dart';\n-\n-class CovidService {\n-  Future<GlobalSummaryModel> getGlobalSummary() async {\n-    final data = await http.Client().get(\"https://api.covid19api.com/summary\");\n-\n-    if (data.statusCode != 200) throw Exception();\n-\n-    GlobalSummaryModel summary =\n-        new GlobalSummaryModel.fromJson(json.decode(data.body));\n-\n-    return summary;\n-  }\n-\n-  Future<List<CountrySummaryModel>> getCountrySummary(String slug) async {\n-    final data = await http.Client().get(\n-        \"https://www.datos.gov.co/resource/gt2j-8ykr.json?\\$order=fecha_de_notificaci_n DESC&\\$limit=1844674407370955161&ciudad_municipio=\" +\n-            slug);\n-\n-    if (data.statusCode == 200) {\n-      var newMap = groupBy((json.decode(data.body) as List),\n-          (obj) => obj['fecha_de_notificaci_n']);\n-      var xde = json.decode(data.body) as List;\n-      print(newMap.length);\n-\n-      newMap.entries.map((MapEntry mapEntry) => print(mapEntry));\n-      //(newMap as List).map((e) => print(e));\n-      List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n-          .map((item) => new CountrySummaryModel.fromJson(item))\n-          .toList();\n-\n-      return summaryList;\n-    } else {\n-      return [];\n-    }\n-  }\n-\n-  Future<List<CountryModel>> getCountryList() async {\n-    final data = await http.Client()\n-        .get(\"https://www.datos.gov.co/resource/xdk5-pm3f.json\");\n-\n-    if (data.statusCode != 200) throw Exception();\n-\n-    List<CountryModel> countries = (json.decode(data.body) as List)\n-        .map((item) => new CountryModel.fromJson(item))\n-        .toList();\n-\n-    return countries;\n-  }\n-}\n"
                },
                {
                    "date": 1635181282739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,18 +19,12 @@\n   }\n \n   Future<List<CountrySummaryModel>> getCountrySummary(String slug) async {\n     final data = await http.Client().get(\n-        r\"https://www.datos.gov.co/resource/gt2j-8ykr.json?$select=ciudad_municipio,recuperado,COUNT(*)%20as%20casos&$group=ciudad_municipio,recuperado&ciudad_municipio=5001\");\n+        r\"https://www.datos.gov.co/resource/gt2j-8ykr.json?$group=ciudad_municipio&$select=ciudad_municipio,COUNT(*) as casos, SUM(CASE(recuperado LIKE '%25allecido%25', 1, true, 0)) AS fallecidos, SUM(CASE(recuperado LIKE '%25ecuperado%25', 1, true, 0)) AS recuperados, SUM(CASE(recuperado LIKE '%25ctivo%25', 1, true, 0)) AS activos, SUM(CASE(recuperado LIKE '%25N/A%25', 1, true, 0)) AS na&ciudad_municipio=\" +\n+            slug);\n \n     if (data.statusCode == 200) {\n-      var newMap = groupBy((json.decode(data.body) as List),\n-          (obj) => obj['fecha_de_notificaci_n']);\n-      var xde = json.decode(data.body) as List;\n-      print(newMap.length);\n-\n-      newMap.entries.map((MapEntry mapEntry) => print(mapEntry));\n-      //(newMap as List).map((e) => print(e));\n       List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n           .toList();\n \n"
                },
                {
                    "date": 1635181714564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n   }\n \n   Future<List<CountrySummaryModel>> getCountrySummary(String slug) async {\n     final data = await http.Client().get(\n-        r\"https://www.datos.gov.co/resource/gt2j-8ykr.json?$group=ciudad_municipio&$select=ciudad_municipio,COUNT(*) as casos, SUM(CASE(recuperado LIKE '%25allecido%25', 1, true, 0)) AS fallecidos, SUM(CASE(recuperado LIKE '%25ecuperado%25', 1, true, 0)) AS recuperados, SUM(CASE(recuperado LIKE '%25ctivo%25', 1, true, 0)) AS activos, SUM(CASE(recuperado LIKE '%25N/A%25', 1, true, 0)) AS na&ciudad_municipio=\" +\n+        r\"https://www.datos.gov.co/resource/gt2j-8ykr.json?$group=ciudad_municipio, fecha_diagnostico&$select=fecha_diagnostico, ciudad_municipio,COUNT(*) as casos, SUM(CASE(recuperado LIKE '%25allecido%25', 1, true, 0)) AS fallecidos, SUM(CASE(recuperado LIKE '%25ecuperado%25', 1, true, 0)) AS recuperados, SUM(CASE(recuperado LIKE '%25ctivo%25', 1, true, 0)) AS activos, SUM(CASE(recuperado LIKE '%25N/A%25', 1, true, 0)) AS na&ciudad_municipio=\" +\n             slug);\n \n     if (data.statusCode == 200) {\n       List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n"
                },
                {
                    "date": 1635186781359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     if (data.statusCode == 200) {\n       List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n           .toList();\n-\n+      summaryList.sort((a, b) => a.date.compareTo(b.date));\n       return summaryList;\n     } else {\n       return [];\n     }\n"
                },
                {
                    "date": 1635189245910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n       List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n           .map((item) => new CountrySummaryModel.fromJson(item))\n           .toList();\n       summaryList.sort((a, b) => a.date.compareTo(b.date));\n+\n       return summaryList;\n     } else {\n       return [];\n     }\n"
                }
            ],
            "date": 1633882508051,
            "name": "Commit-0",
            "content": "import 'package:http/http.dart' as http;\nimport 'dart:convert';\n\nimport '../models/global_summary.dart';\nimport '../models/country_summary.dart';\nimport '../models/country.dart';\nimport 'package:flutter/foundation.dart';\n\nclass CovidService {\n  Future<GlobalSummaryModel> getGlobalSummary() async {\n    final data = await http.Client().get(\"https://api.covid19api.com/summary\");\n\n    if (data.statusCode != 200) throw Exception();\n\n    GlobalSummaryModel summary =\n        new GlobalSummaryModel.fromJson(json.decode(data.body));\n\n    return summary;\n  }\n\n  Future<List<CountrySummaryModel>> getCountrySummary(String slug) async {\n    final data = await http.Client()\n        .get(\"https://api.covid19api.com/total/dayone/country/\" + slug);\n\n    if (data.statusCode != 200) throw Exception();\n\n    List<CountrySummaryModel> summaryList = (json.decode(data.body) as List)\n        .map((item) => new CountrySummaryModel.fromJson(item))\n        .toList();\n\n    return summaryList;\n  }\n\n  Future<List<CountryModel>> getCountryList() async {\n    final data =\n        await http.Client().get(\"https://api.covid19api.com/countries\");\n    final a = await http.Client()\n        .get(\"https://www.datos.gov.co/resource/vcjz-niiq.json\");\n    debugPrint('datas: $a');\n    if (data.statusCode != 200) throw Exception();\n\n    List<CountryModel> countries = (json.decode(data.body) as List)\n        .map((item) => new CountryModel.fromJson(item))\n        .toList();\n\n    return countries;\n  }\n}\n"
        }
    ]
}